#!groovy

/*
 * Common Jenkinsfile used by all Maven Git projects and all branches.
 *
 * @author jcrawford
 *
 */

	properties([
    pipelineTriggers([
        [$class: "SCMTrigger", scmpoll_spec: "*/1 * * * *"],
    ])
])


node {
	// Limit build concurrency to 1 per branch to fix "Could not perform a local checkout" (workspace@2) errors
	//properties([disableConcurrentBuilds()])
  

  
	
	 
        // Use openjdk to avoid greedy Oracle license prompt
        //env.JAVA_HOME="/usr/java/jdk-11.0.1"
        env.JAVA_HOME="/usr/local/opt/openjdk@11"
		env.PATH="${env.JAVA_HOME}/bin:${env.PATH}"
        sh 'java -version'
        
		stage ('Checkout') {
			// Checkout using the SCM object to pass credential token w/o a password. 	    
			// See:  https://stackoverflow.com/questions/38769976/is-it-possible-to-git-merge-push-using-jenkins-pipeline.
			sh 'git config --global credential.helper cache'
			sh 'git config --global push.default simple'
			checkout([
				$class: 'GitSCM',
				branches: scm.branches,
				extensions: scm.extensions + [[$class: 'CleanCheckout']],
				userRemoteConfigs: scm.userRemoteConfigs
				])
		}
	       
// 		stage ('Compile') {

// 			try {
// 				def mvnHome = '/Users/main/work/apache-maven-3.6.3'
// 				sh "${mvnHome}/bin/mvn -f complete/pom.xml compile -B"
// 			} catch(err) {
// 			echo err.getMessage()
//         	currentBuild.result = 'FAILURE'
// 			}
// }
		stage ('Verify') {

			 try {
				def mvnHome = '/Users/main/work/apache-maven-3.6.3'
				sh "${mvnHome}/bin/mvn -f complete/pom.xml verify -B -X"
    		//} catch(err) {
        	} catch (ArithmeticException | ArrayIndexOutOfBoundsException e) {
			echo err.getMessage()
    		currentBuild.result = 'FAILURE'
				//step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
  				//if (currentBuild.result == 'UNSTABLE')
    			//currentBuild.result = 'FAILURE'
  				//throw err
			} finally {
      		step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
			sh 'echo "done - no bad exceptions"'  
			}

		}



// try {
//     } catch (Exception | ArithmeticException | ArrayIndexOutOfBoundsException e) {
//       System.out.println(e.getMessage());
//     }

		// stage ('Package') {

		// 	try {
		// 		def mvnHome = '/Users/main/work/apache-maven-3.6.3'
		// 		sh "${mvnHome}/bin/mvn -f complete/pom.xml package -B"
		// 	} catch(err) {
		// 	echo err.getMessage()
        // 	currentBuild.result = 'FAILURE'
		// 	}
		// }
}

			 
			 
			//  try {
			// def mvnHome = '/Users/main/work/apache-maven-3.6.3'
			// sh "${mvnHome}/bin/mvn -f complete/pom.xml test -B"
			//     } catch (err) {
			//         echo err.getMessage()
        	// 		currentBuild.result = 'FAILURE'
			// }
		 
	// } catch (e) {
    // 	// If there was an exception thrown, the build failed
    // 	currentBuild.result = "FAILED"
    // throw e
//  	} finally {
    // Success or failure, always send notifications
//sh 'echo "build done"'  }
//} // End node

    
